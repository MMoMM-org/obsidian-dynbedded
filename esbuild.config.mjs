import esbuild from "esbuild";
import process from "process";
import builtins from 'builtin-modules'
import {copy} from "esbuild-plugin-copy";

const TEST_VAULT = 'Dynbedded';
const PLUGIN_ID = 'obsidian-dynbedded';

// Taken and adapted from https://github.com/MSzturc/obsidian-advanced-slides/blob/main/esbuild.config.mjs
const staticAssetsPlugin = {
	name: 'static-assets-plugin',
	setup(build) {
		if (!dev) {
			build.onLoad({filter: /.+/}, (args) => {
				return {
					watchFiles: ['styles.css', 'esbuild.config.mjs', 'manifest.json'],
				};
			});
		}
	},
};

const banner =
`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = (process.argv[2] === 'production');
const dev = (process.argv[2] === 'dev' || process.argv[3] === 'dev');
const PLUGINS_PATH = '/.obsidian/plugins/';


let outfile;
if (!dev) {
	outfile = './build/main.js';
} else {
	outfile = TEST_VAULT + PLUGINS_PATH + PLUGIN_ID +'/main.js';
}


esbuild.build({
	banner: {
		js: banner,
	},
	entryPoints: ['src/main.ts'],
	bundle: true,
	external: [
		'obsidian',
		'electron',
		'@codemirror/autocomplete',
		'@codemirror/collab',
		'@codemirror/commands',
		'@codemirror/language',
		'@codemirror/lint',
		'@codemirror/search',
		'@codemirror/state',
		'@codemirror/view',
		'@lezer/common',
		'@lezer/highlight',
		'@lezer/lr',
		...builtins],
	format: 'cjs',
	watch: !prod,
	target: 'es2018',
	logLevel: "info",
	sourcemap: prod ? false : 'inline',
	treeShaking: true,
	outfile: outfile,
	plugins: [
		staticAssetsPlugin,
		copy({
			assets: {
				from: ['./manifest.json', './styles.css'],
				to: ['.'],
			},
		}),
	],
}).catch(() => process.exit(1));
